{"componentChunkName":"component---src-templates-content-jsx","path":"/uport-credentials/guides/index","result":{"data":{"allMarkdownRemark":{"totalCount":8,"edges":[{"node":{"fields":{"slug":"/uport-credentials/index"},"headings":[{"value":"uPort Credentials","depth":1},{"value":"Create & Request Attested Data","depth":2}],"excerpt":"uPort Credentials Create & Request Attested Data uPort is a self-sovereign digital identity platform—anchored on the Ethereum blockchain…","timeToRead":1,"frontmatter":{"title":"uPort Credentials","category":"uport-credentials","type":"landing","index":0,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/index.md"}}},{"node":{"fields":{"slug":"/uport-credentials/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Configure Your Application","depth":2},{"value":"Generate an Ethereum Keypair","depth":2},{"value":"Requesting Information From Your Users","depth":2},{"value":"Stateless Challenge/ Response","depth":3},{"value":"Requesting Push Notification Tokens From Your Users","depth":3},{"value":"Attesting Information About Your Users","depth":2},{"value":"Creating an Attestation","depth":3},{"value":"Asking Users to Sign Ethereum Transactions","depth":2}],"excerpt":"Getting Started Configure Your Application In your application, you must first configure your uPort object with an identifier and a private…","timeToRead":5,"frontmatter":{"title":"Getting Started with uPort Credentials","category":"uport-credentials","type":"content","index":null,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/guides/index.md"}}},{"node":{"fields":{"slug":"/credentials/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Disclosure Request Login Service","depth":2},{"value":"Selective Disclosure Request","depth":4},{"value":"Disclosure Response Authentication Service","depth":2},{"value":"Selective Disclosure Response","depth":4},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Creating a simple login solution with uport-credentials can be accomplished with a small Node.js application to request…","timeToRead":5,"frontmatter":{"title":"Server Side Login Example","category":"uport-credentials","type":"guide","index":2,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/login.md"}}},{"node":{"fields":{"slug":"/uport-credentials/guides/tutorial"},"headings":[{"value":"Create an Identity","depth":2},{"value":"Create Verification Service","depth":2},{"value":"Request Verification Service","depth":2}],"excerpt":"In this toutorial, we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present it to a uPort…","timeToRead":7,"frontmatter":{"title":"Server-side examples","category":"uport-credentials","type":"content","index":null,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/guides/tutorial.md"}}},{"node":{"fields":{"slug":"/credentials/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Requesting verifications with your server application is the same process as creating a disclosure request as seen in the login…","timeToRead":5,"frontmatter":{"title":"Request Verification Example","category":"uport-credentials","type":"tutorial","index":4,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/verification.md"}}},{"node":{"fields":{"slug":"/credentials/transactions"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create Transaction Request","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction It is possible with uport-credentials to create an ethereum transaction request and have a mobile client approve and sign that…","timeToRead":6,"frontmatter":{"title":"Transaction Signing Example","category":"uport-credentials","type":"tutorial","index":5,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/transactions.md"}}},{"node":{"fields":{"slug":"/credentials/createverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create and Issue Verifications","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Creating and issuing verifications from your server application is a simple matter of utilizing uport-credentials to create…","timeToRead":9,"frontmatter":{"title":"Create Verification Example","category":"uport-credentials","type":"tutorial","index":3,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/verification.md"}}},{"node":{"fields":{"slug":"/uport-credentials/reference/index"},"headings":[{"value":"Credentials","depth":2},{"value":"new Credentials(settings)","depth":3},{"value":"credentials.createDisclosureRequest(params, expiresIn) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"credentials.createVerification(credential) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createVerificationSignatureRequest(unsignedClaim, opts) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createTxRequest(txObj, opts) ⇒ <code>String</code>","depth":3},{"value":"credentials.createDisclosureResponse(payload) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.processDisclosurePayload(response)","depth":3},{"value":"credentials.authenticateDisclosureResponse(token, callbackUrl) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.verifyDisclosure(token) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"Credentials.createIdentity() ⇒ <code>Object</code>","depth":3}],"excerpt":"Credentials The Credentials class allows you to easily create the signed payloads used in uPort, including\ncredentials and signed mobile app…","timeToRead":14,"frontmatter":{"title":"Library Reference","category":"uport-credentials","type":"reference","index":10,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/reference/index.md"}}}]},"postBySlug":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"getting-started","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#getting-started","ariaLabel":"getting started permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Getting Started"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"configure-your-application","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#configure-your-application","ariaLabel":"configure your application permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Configure Your Application"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In your application, you must first configure your uPort object with an identifier and a private key (or signer\nfunction). There are several ways to instantiate a credentials object. The most common approach is to save a DID and\nprivate key on a server for your application and create a credentials instance from your application's unique private\nkey. Signed JWTs for requests and verifications can then be passed to a client-side application, and presented to a user\nusing a QR code or via another "},{"type":"element","tagName":"a","properties":{"href":"http://github.com/uport-project/uport-transports"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Credentials "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'uport-credentials'"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Resolver "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'did-resolver'"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" getResolver "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'ethr-did-resolver'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" providerConfig "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" rpcUrl"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'https://mainnet.infura.io/<YOUR INFURA PROJECT ID>'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" resolver "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Resolver"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getResolver"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"providerConfig"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// For ethereum based addresses (ethr-did)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" credentials "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Credentials"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  appName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'App Name'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  did"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'did:ethr:0x....'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  privateKey"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" process"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"env"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"PRIVATE_KEY"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  resolver\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"generate-an-ethereum-keypair","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#generate-an-ethereum-keypair","ariaLabel":"generate an ethereum keypair permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Generate an Ethereum Keypair"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At times, you might want identities to be created dynamically. This can be accomplished with the static\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Credentials.createIdentity()"}]},{"type":"text","value":" method, which generates an Ethereum keypair and returns an object containing the\nassociated DID and private key. This method is not intended to be used in a react-native context, if you are developing\na react-native app please use the "},{"type":"element","tagName":"a","properties":{"href":"http://github.com/uport-project/react-native-uport-signer"},"children":[{"type":"text","value":"react-native-uport-signer"}]},{"type":"text","value":"\nto generate Ethereum Keypairs."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Create a credentials object for a new identity"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"did"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" privateKey"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createIdentity"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" credentials "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Credentials"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  appName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'App Name'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  did"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  privateKey"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  resolver\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"requesting-information-from-your-users","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#requesting-information-from-your-users","ariaLabel":"requesting information from your users permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Requesting Information From Your Users"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can request information from your user, by creating a Selective Disclosure Request JWT. When this is presented to a\nuser via a QR code or another "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/uport-transports"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":", they will be prompted to\napprove sharing the request attributes. All requests will return a user's "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"DID"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createDisclosureRequest"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"requestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send requestToken to browser or transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A selective disclosure request JWT can ask for specific private data, and/or provide a URL to which a mobile app should\nsend a response."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createDisclosureRequest"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  requested"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'name'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'phone'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'identity_no'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  callbackUrl"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'https://....'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// URL to send the response of the request to"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"requestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send requestToken to browser or transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need to know the users address on a specific Ethereum network, specify its "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"networkId"}]},{"type":"text","value":" (currently defaults to\nMainnet "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0x1"}]},{"type":"text","value":"). In this case be aware that the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"address"}]},{"type":"text","value":" returned will be the address on the public network (currently\nMainnet) for the user's profile. The requested network address will be in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"networkAddress"}]},{"type":"text","value":" field and will be MNID\nencoded."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Request an address on Rinkeby"}]},{"type":"text","value":"\ncredentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"requestDisclosure"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"networkId"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'0x4'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"requestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send requestToken to browser or transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When a response JWT is received, it can be parsed and verified via the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"verifyDisclosure()"}]},{"type":"text","value":" method, which checks the\nvalidity of the signature on the JWT, as well as the validity of the original disclosure request, which is expected as\npart of the response. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"verifyDisclosure"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"responseToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"verifiedData"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Do stuff with verified data or transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"stateless-challenge-response","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#stateless-challenge-response","ariaLabel":"stateless challenge response permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Stateless Challenge/ Response"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To ensure that the response received was created as a response to your selective disclosure request above, the original\nrequest is included in the response from the mobile app."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The verification rule for the Selective Disclosure Response is that the issuer of the embedded request must match the\ndid in your Credentials object and that the original request has not yet expired. This is to be sure that when\nrequesting data from a user, only a response to your initial request will be accepted as valid. If you would like to\nconsume an arbitrary signed JWT that is not part of a particular selective disclosure flow, you can use the\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"verifyDisclosure()"}]},{"type":"text","value":" method to skip the challenge/response check."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"requesting-push-notification-tokens-from-your-users","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#requesting-push-notification-tokens-from-your-users","ariaLabel":"requesting push notification tokens from your users permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Requesting Push Notification Tokens From Your Users"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As part of the selective disclosure request, you can also ask for permission from your users to communicate directly\nwith their app. With a push token, you can configure a "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/uport-transports"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":"\nto send JWTs via push."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createRequest"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  requested"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  notifications"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"requestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send to the browser"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user approves the use of push notifications, the selective disclosure response will contain a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"pushToken"}]},{"type":"text","value":" field,\nwhich can be saved when the response is received and verified."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"verifyDisclosureResponse"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"responseToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"verifiedData"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Store push token securely"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"doSomethingWith"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"verifiedData"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"pushToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"attesting-information-about-your-users","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#attesting-information-about-your-users","ariaLabel":"attesting information about your users permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Attesting Information About Your Users"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to requesting and verifying information, you can also sign new data on behalf of your application and share\nit with your users in the form of "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"attestations"}]},{"type":"text","value":", also known as "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"verifications"}]},{"type":"text","value":". By presenting an attestation to a user,\nyou are making a claim about them, and are "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"attesting"}]},{"type":"text","value":" to its truth with your application's signature. Exactly what\ninformation your app should attest to depends the context -- If you're a financial institution, you may be able to\nattest to KYC related information such as national identity numbers. If you're an educational institution, you may want\nto attest to your user's achievements in a way that they can securely share. Anyone with access to your application's\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"did"}]},{"type":"text","value":" can verify that a particular attestation came from your app."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Attesting to information about your users helps to add real value to your application, and your users will use uPort to\nbuild up their own digital identity."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"creating-an-attestation","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#creating-an-attestation","ariaLabel":"creating an attestation permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Creating an Attestation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createVerification"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  sub"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'0x...'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// uport address of user"}]},{"type":"text","value":"\n  expiresIn"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"future timestamp"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// If your information is not permanent make sure to add expiresIn, the time in seconds from now"}]},{"type":"text","value":"\n  claims"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"name"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'John Smith'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"attestation"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send attestation to user"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As with a verification request, you will want to send this JWT to your user. You can do this in the browser via QR,\nusing push with a previously requested pushToken, or via another\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/uport-transports"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":" of your choosing."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"asking-users-to-sign-ethereum-transactions","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#asking-users-to-sign-ethereum-transactions","ariaLabel":"asking users to sign ethereum transactions permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Asking Users to Sign Ethereum Transactions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, as uPort is based in the Ethereum blockchain, uPort Credentials can be used to request that a user call a\nparticular Ethereum smart contract function. Smart contracts live on the blockchain at a certain address and expose\npublic functions that can be called according to their ABI. Using the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Credentials.contract"}]},{"type":"text","value":" method, you can create an\nobject from a contract abi that will create transaction request JWTs for each contract method, that can be presented to\na user's mobile application like any other JWT described above. This is just a wrapper around\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Credentials.createTxRequest()"}]},{"type":"text","value":", which generates the txObject for a particular contract method call."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" abi "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'./myContractAbi.json'"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" myContract "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" Credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"contract"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"abi"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"at"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"contractAddress"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// creates a request for the user to call the transfer() function on the smart contract"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" txRequest "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" myContract"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"transfer"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"txRequestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// send tx request token to user"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]}],"data":{"quirksMode":false}},"timeToRead":5,"excerpt":"Getting Started Configure Your Application In your application, you must first configure your uPort object with an identifier and a private…","headings":[{"value":"Getting Started","depth":1},{"value":"Configure Your Application","depth":2},{"value":"Generate an Ethereum Keypair","depth":2},{"value":"Requesting Information From Your Users","depth":2},{"value":"Stateless Challenge/ Response","depth":3},{"value":"Requesting Push Notification Tokens From Your Users","depth":3},{"value":"Attesting Information About Your Users","depth":2},{"value":"Creating an Attestation","depth":3},{"value":"Asking Users to Sign Ethereum Transactions","depth":2}],"frontmatter":{"title":"Getting Started with uPort Credentials","category":"uport-credentials","type":"content","source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/guides/index.md"},"fields":{"slug":"/uport-credentials/guides/index"}},"navTypes":{"edges":[{"node":{"fields":{"slug":"/readme"},"headings":[{"value":"uPort Specs","depth":1},{"value":"Identities","depth":2},{"value":"Identities created using the uPort Mobile App","depth":3},{"value":"Request Flows","depth":2},{"value":"More about request flows","depth":3},{"value":"Request and Response Transports","depth":2},{"value":"Request/Response Transports","depth":3},{"value":"Off-chain Messages","depth":2},{"value":"More about Off-chain Messages","depth":3},{"value":"On-chain Transactions","depth":2},{"value":"More about Signing Ethereum transactions","depth":3},{"value":"uPort PKI","depth":2},{"value":"More about the uPort PKI","depth":3}],"frontmatter":{"category":"specs","type":"reference","index":3}}},{"node":{"fields":{"slug":"/uport-transports/index"},"headings":[{"value":"uPort Transports","depth":1},{"value":"Connect Users to a uPort Client","depth":3}],"frontmatter":{"category":"uport-transports","type":"landing","index":0}}},{"node":{"fields":{"slug":"/uport-credentials/index"},"headings":[{"value":"uPort Credentials","depth":1},{"value":"Create & Request Attested Data","depth":2}],"frontmatter":{"category":"uport-credentials","type":"landing","index":0}}},{"node":{"fields":{"slug":"/uport-transports/guides/modules"},"headings":[{"value":"<a name=\"transport-guide\"></a> uPort Transports Guide","depth":1},{"value":"Request Transports","depth":2},{"value":"Response Transports","depth":2},{"value":"<a name=\"quick-start\"></a> Quick Start","depth":2}],"frontmatter":{"category":"uport-transports","type":"guide","index":1}}},{"node":{"fields":{"slug":"/uport-credentials/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Configure Your Application","depth":2},{"value":"Generate an Ethereum Keypair","depth":2},{"value":"Requesting Information From Your Users","depth":2},{"value":"Stateless Challenge/ Response","depth":3},{"value":"Requesting Push Notification Tokens From Your Users","depth":3},{"value":"Attesting Information About Your Users","depth":2},{"value":"Creating an Attestation","depth":3},{"value":"Asking Users to Sign Ethereum Transactions","depth":2}],"frontmatter":{"category":"uport-credentials","type":"content","index":null}}},{"node":{"fields":{"slug":"/uport-connect/index"},"headings":[{"value":"uPort Connect","depth":1},{"value":"Instantly Connect Users to Your dApp","depth":3}],"frontmatter":{"category":"uport-connect","type":"landing","index":0}}},{"node":{"fields":{"slug":"/transports/index"},"headings":[{"value":"Request/Response Transports","depth":1},{"value":"Requests","depth":2},{"value":"Open URL","depth":3},{"value":"QR Code","depth":3},{"value":"Push Notifications","depth":3},{"value":"Responses","depth":2},{"value":"Redirect callback type","depth":3},{"value":"HTTP post callback type","depth":3},{"value":"Examples","depth":2},{"value":"Mobile Browser Transport","depth":3},{"value":"Desktop Browser Serverless Transport","depth":3},{"value":"Desktop Browser Server Backed Transport","depth":3},{"value":"Push Notification Transport","depth":3}],"frontmatter":{"category":"transports","type":"reference","index":null}}},{"node":{"fields":{"slug":"/rest-apis/fuel-server"},"headings":[{"value":"Transaction Fueling Server","depth":1},{"value":"API Description","depth":2},{"value":"Fuel Token","depth":3},{"value":"Fund address","depth":3},{"value":"Endpoint","depth":4},{"value":"Header","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"apis","type":"reference","index":null}}},{"node":{"fields":{"slug":"/transports/push"},"headings":[{"value":"Push Notification Transport","depth":1},{"value":"Proper encoding of the request","depth":3},{"value":"Sending the request","depth":2},{"value":"Push notification server","depth":3},{"value":"Endpoint","depth":4},{"value":"Headers","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"transports","type":"reference","index":null}}},{"node":{"fields":{"slug":"/rest-apis/relay-server"},"headings":[{"value":"Meta Transaction Relaying Server","depth":1},{"value":"API Description","depth":2},{"value":"Fuel Token","depth":3},{"value":"MetaSignedTx","depth":3},{"value":"Endpoint","depth":4},{"value":"Header","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"apis","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/diddocument"},"headings":[{"value":"Decentralized Identity Document (DID Document)","depth":1},{"value":"Contents","depth":2},{"value":"Parameters","depth":3}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/index"},"headings":[{"value":"uPort Public Key Infrastructure (PKI)","depth":1},{"value":"Purpose","depth":2},{"value":"Creating and Verifying a JWT","depth":2},{"value":"Identity Document","depth":2},{"value":"Verifying a signature","depth":2}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/identitydocument"},"headings":[{"value":"Identity Document (DEPRECATED)","depth":1},{"value":"Contents","depth":2},{"value":"Parameters","depth":3},{"value":"Resolving the Public Key for <code class=\"language-text\">iss</code>","depth":3},{"value":"Resolving the Public Encryption Key for <code class=\"language-text\">iss</code>","depth":3},{"value":"Registering an Identity Document","depth":2},{"value":"External Accounts (Key Pairs)","depth":3},{"value":"Smart Contract Accounts","depth":3},{"value":"uPort Mobile App Created Identities","depth":3}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/overview/attestation"},"headings":[{"value":"Issue Verifications","depth":1},{"value":"Contribute to the Decentralized World","depth":2}],"frontmatter":{"category":"attestation","type":"orientation","index":4}}},{"node":{"fields":{"slug":"/overview/login"},"headings":[{"value":"Login Solutions","depth":1},{"value":"Frictionless Login Across the Web","depth":2}],"frontmatter":{"category":"login","type":"orientation","index":3}}},{"node":{"fields":{"slug":"/overview/transactions"},"headings":[{"value":"Requesting Transactions","depth":1},{"value":"Send Users An Ethereum Transaction Request","depth":2}],"frontmatter":{"category":"Requesting Transactions","type":"orientation","index":5}}},{"node":{"fields":{"slug":"/messages/claims"},"headings":[{"value":"Issuer Claims","depth":1},{"value":"Verified Claims about Issuer","depth":2},{"value":"IPLD Format","depth":3},{"value":"Parameters","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/index"},"headings":[{"value":"Off-chain Messages","depth":1},{"value":"JSON Web Token","depth":2},{"value":"Requirements","depth":3},{"value":"JOSE Header","depth":4},{"value":"Attributes","depth":4},{"value":"Signature Verification","depth":3},{"value":"Message Encryption","depth":3},{"value":"Unsigned Requests (Deprecated)","depth":2},{"value":"Standard Unsigned Parameters","depth":3},{"value":"Message types","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/personalsignreq"},"headings":[{"value":"Personal Sign Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/personalsignresp"},"headings":[{"value":"Personal Sign Response","depth":1},{"value":"Attributes","depth":1}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/encryption"},"headings":[{"value":"Message Encryption","depth":1},{"value":"Encryption Public Key resolution","depth":2},{"value":"Request/Response resolution","depth":2},{"value":"JOSE JWK Standards","depth":3},{"value":"Encrypting the request","depth":2},{"value":"Decrypting the request","depth":2},{"value":"Padding","depth":2},{"value":"Legacy Encryption of the request","depth":2},{"value":"Encoding the encrypted data","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/sharereq"},"headings":[{"value":"Selective Disclosure Request","depth":1},{"value":"Attributes","depth":4},{"value":"Claims Spec","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"Unsigned Requests (Deprecated)","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/shareresp"},"headings":[{"value":"Selective Disclosure Response","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/signtypeddatareq"},"headings":[{"value":"Sign Typed Data Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/tx"},"headings":[{"value":"Ethereum Transaction Request","depth":1},{"value":"Signed Transaction Request","depth":2},{"value":"Attributes","depth":3},{"value":"ERC 67 Unsigned Transaction Request","depth":2},{"value":"Attributes","depth":3},{"value":"Addresses and Network selection","depth":2},{"value":"Transaction Request Validity","depth":2},{"value":"ETH Value Transfer","depth":3},{"value":"ETH Value Transfer","depth":3},{"value":"Ethereum Smart Contract creation","depth":3},{"value":"Client Callback","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/verificationreq"},"headings":[{"value":"Verified Claim Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/verification"},"headings":[{"value":"Verified Claims","depth":1},{"value":"Attributes","depth":2},{"value":"Claims Best Practices","depth":2},{"value":"Use atomic claims","depth":3},{"value":"Bundling multiple claims as one","depth":3},{"value":"Claim Taxonomy","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/signtypeddataresp"},"headings":[{"value":"Signed Typed Data Response","depth":1},{"value":"Attributes","depth":1}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/guides/attestcredentials"},"headings":[{"value":"Attesting Credentials","depth":1},{"value":"Requesting the user to sign a credential","depth":2},{"value":"Relaying an existing credential","depth":2},{"value":"Signing a credential about the user in app","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/gettingstarted"},"headings":[{"value":"Get Started","depth":1},{"value":"Get the uPort App","depth":2},{"value":"Get an Application ID","depth":2},{"value":"Buidl","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/reactuporttruffle"},"headings":[{"value":"React-uport Truffle box","depth":1},{"value":"Setup React Truffle Box","depth":2},{"value":"Create the necessary uport-connect objects","depth":2},{"value":"Request a user's information","depth":2},{"value":"Create an Attestation","depth":2},{"value":"Wrapping it up","depth":2}],"frontmatter":{"category":"truffle","type":"tutorial","index":0}}},{"node":{"fields":{"slug":"/guides/requestcredentials"},"headings":[{"value":"Requesting Credentials","depth":1},{"value":"Authenticating a user","depth":2},{"value":"Requesting specific credentials","depth":2},{"value":"Enabling push notifications","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/signtransactions"},"headings":[{"value":"Ethereum Transactions and Contract Calls","depth":1},{"value":"uPort Requests","depth":2},{"value":"Using with a Provider (Web3)","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/flows/index"},"headings":[{"value":"Uport Request Flows","depth":1},{"value":"Unified Message Request Flow","depth":2},{"value":"Specific Application flows","depth":2},{"value":"Errors","depth":2}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/personalsign"},"headings":[{"value":"Personal Signature Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/privatechain"},"headings":[{"value":"Private Chain Provisioning Flow","depth":1},{"value":"Requirements","depth":2},{"value":"Provisioning Methodology","depth":2}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/selectivedisclosure"},"headings":[{"value":"Selective Disclosure Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Deprecated Flows","depth":3},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/tx"},"headings":[{"value":"Ethereum Transaction Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/typeddatasig"},"headings":[{"value":"Typed Data Signature Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/verification"},"headings":[{"value":"Send Verification Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Verifications","depth":2},{"value":"Deprecated Flows","depth":3},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/verificationreq"},"headings":[{"value":"Verified Claim Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/credentials/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Disclosure Request Login Service","depth":2},{"value":"Selective Disclosure Request","depth":4},{"value":"Disclosure Response Authentication Service","depth":2},{"value":"Selective Disclosure Response","depth":4},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"guide","index":2}}},{"node":{"fields":{"slug":"/credentials/index"},"headings":[{"value":"Server-side Login Solution","depth":1},{"value":"The Login Solution for Your Server-side dApp","depth":2}],"frontmatter":{"category":"login","type":"orientation","index":0}}},{"node":{"fields":{"slug":"/connect/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Create Authentication Functionality","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":2}}},{"node":{"fields":{"slug":"/connect/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":4}}},{"node":{"fields":{"slug":"/connect/sendverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Create and Send a Verification","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":3}}},{"node":{"fields":{"slug":"/muport-core-js/guides/simple-id"},"headings":[{"value":"Simple ID (muPort)","depth":1},{"value":"Onboarding/Signup","depth":2},{"value":"Interacting with a service","depth":2},{"value":"Setting up recovery network","depth":2},{"value":"Using the recovery network","depth":2},{"value":"Updating the encrypted recovery shards","depth":2}],"frontmatter":{"category":"muport","type":"guides","index":null}}},{"node":{"fields":{"slug":"/ethr-did/docs/index"},"headings":[{"value":"Ethr-DID","depth":1},{"value":"A Scalable Identity Method for Ethereum Addresses","depth":2}],"frontmatter":{"category":"ethr-did","type":"landing","index":0}}},{"node":{"fields":{"slug":"/did-jwt/guides/index"},"headings":[{"value":"Working with did-JWT's","depth":1},{"value":"Creating a JWT","depth":2},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4},{"value":"Verifying a JWT","depth":2},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4},{"value":"Signer Functions","depth":2},{"value":"SimpleSigner","depth":3},{"value":"Parameters","depth":4},{"value":"Creating Custom Signers for integrating with HSM","depth":3},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4}],"frontmatter":{"category":"did-jwt","type":"guide","index":4}}},{"node":{"fields":{"slug":"/ethr-did/docs/reference/index"},"headings":[{"value":"Introduction","depth":2},{"value":"DID Method","depth":2},{"value":"Configuration","depth":2}],"frontmatter":{"category":"ethr-did","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-credentials/guides/tutorial"},"headings":[{"value":"Create an Identity","depth":2},{"value":"Create Verification Service","depth":2},{"value":"Request Verification Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"content","index":null}}},{"node":{"fields":{"slug":"/overview/glossary"},"headings":[{"value":"Terms and Definitions","depth":3}],"frontmatter":{"category":"glossary","type":"overview","index":2}}},{"node":{"fields":{"slug":"/overview/index"},"headings":[{"value":"Helping You Build User Centric Apps on Blockchains","depth":2},{"value":"Onboarding a user to your dApp","depth":3},{"value":"As a Developer You Want Users Who Are Active and Come Back to Your dApp.","depth":5},{"value":"What is an Identity?","depth":2},{"value":"Help Your User Build Their Identity","depth":3},{"value":"But All I Really Need is an Ethereum Address!","depth":3},{"value":"Asking The User to do Something","depth":3},{"value":"Reasons for Asking for Identity Data","depth":3},{"value":"The Problem With Centralized Identity Solutions","depth":3},{"value":"Signing Ethereum Transactions","depth":2},{"value":"Off-chain Data","depth":2},{"value":"uPort Protocols and Libraries","depth":2},{"value":"For Fully Decentralized Apps (dApps)","depth":3},{"value":"For Decentralized Mobile Applications","depth":3},{"value":"For Hybrid Applications","depth":3}],"frontmatter":{"category":"about","type":"overview","index":0}}},{"node":{"fields":{"slug":"/ethr-did-resolver/readme"},"headings":[{"value":"ethr DID Resolver","depth":1},{"value":"DID method","depth":2},{"value":"DID Document","depth":2},{"value":"Building a DID document","depth":2},{"value":"Owner Address","depth":3},{"value":"Enumerating contract events for an identity","depth":3},{"value":"Delegate Keys","depth":3},{"value":"Non Ethereum Attributes","depth":3},{"value":"Public Keys","depth":3},{"value":"Key purposes","depth":4},{"value":"Example hex encoded Secp256k1 Verification Key","depth":4},{"value":"Base64 encoded Ed25519 Verification Key","depth":4},{"value":"Base64 encoded X25519 Encryption Key","depth":4},{"value":"Service Endpoints","depth":3},{"value":"Hex encoded Secp256k1 Verification Key","depth":4},{"value":"Resolving a DID document","depth":2},{"value":"Multi-network configuration","depth":2}],"frontmatter":{"category":"ethr-did-resolver","type":"reference","index":7}}},{"node":{"fields":{"slug":"/ethr-did-registry/readme"},"headings":[{"value":"Ethereum DID Registry","depth":1},{"value":"Contract Deployments","depth":2},{"value":"Using the Registry","depth":2},{"value":"On-chain vs. Off-chain","depth":2},{"value":"Identity Identifier","depth":2},{"value":"Identity Ownership","depth":2},{"value":"Looking up Identity Ownership","depth":3},{"value":"Changing Identity Ownership","depth":3},{"value":"Delegates","depth":2},{"value":"Delegate Types","depth":3},{"value":"Validity","depth":3},{"value":"Looking up a Delegate","depth":3},{"value":"Adding a Delegate","depth":3},{"value":"Revoking a Delegate","depth":3},{"value":"Enumerating Delegates Off-chain","depth":3},{"value":"Adding Off-chain Attributes","depth":2},{"value":"Setting Attributes","depth":3},{"value":"Revoking Attributes","depth":3},{"value":"Reading attributes","depth":3},{"value":"Delegate types and attribute names encoding","depth":3},{"value":"Enumerating Linked Identity Events","depth":2},{"value":"Assemble a DID Document","depth":2},{"value":"Deploy contract","depth":2},{"value":"Testing the Contracts","depth":2}],"frontmatter":{"category":"ethr-did-registry","type":"reference","index":0}}},{"node":{"fields":{"slug":"/credentials/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":4}}},{"node":{"fields":{"slug":"/credentials/transactions"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create Transaction Request","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":5}}},{"node":{"fields":{"slug":"/credentials/createverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create and Issue Verifications","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":3}}},{"node":{"fields":{"slug":"/ethr-did/docs/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Construct a New Identity","depth":2},{"value":"Create Ethr-DID","depth":3},{"value":"Use Existing Web3 Provider","depth":4},{"value":"Ethereum Web3 Wallet Developers","depth":4},{"value":"Exchange Verifiable Data","depth":2},{"value":"Signing a JWT","depth":3},{"value":"Verifying a JWT","depth":3},{"value":"Manage Keys","depth":2},{"value":"The Concept of Identity Ownership","depth":3},{"value":"Changing an Owner","depth":3},{"value":"Adding a Delegate Signer","depth":3},{"value":"Set Public Attributes","depth":2}],"frontmatter":{"category":"ethr-did","type":"guide","index":1}}},{"node":{"fields":{"slug":"/uport-credentials/reference/index"},"headings":[{"value":"Credentials","depth":2},{"value":"new Credentials(settings)","depth":3},{"value":"credentials.createDisclosureRequest(params, expiresIn) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"credentials.createVerification(credential) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createVerificationSignatureRequest(unsignedClaim, opts) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createTxRequest(txObj, opts) ⇒ <code>String</code>","depth":3},{"value":"credentials.createDisclosureResponse(payload) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.processDisclosurePayload(response)","depth":3},{"value":"credentials.authenticateDisclosureResponse(token, callbackUrl) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.verifyDisclosure(token) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"Credentials.createIdentity() ⇒ <code>Object</code>","depth":3}],"frontmatter":{"category":"uport-credentials","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-connect/guides/usage"},"headings":[{"value":"<a name=\"usage-guide\"></a> Connect Library Guide","depth":1},{"value":"<a name=\"communication\"></a> Messages","depth":2},{"value":"<a name=\"communication\"></a> Communication and Transports","depth":2},{"value":"Default QR Flow","depth":3},{"value":"<a name=\"default-mobile\"></a> Default Mobile Requests","depth":3},{"value":"<a name=\"default-push\"></a> Push Notification Requests","depth":3},{"value":"Transports Configuration","depth":3},{"value":"<a name=\"both-default\"></a> Combining Both Flows","depth":2},{"value":"<a name=\"ethereum\"></a> Ethereum Interactions and Transactions","depth":2},{"value":"<a name=\"uPortEth\"></a> uPort Requests","depth":3},{"value":"<a name=\"web3\"></a> Using With a Provider (Web3)","depth":3},{"value":"<a name=\"private-chain\"></a> Private Chain support","depth":3}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/uport-connect/reference/index"},"headings":[{"value":"Classes","depth":2},{"value":"Connect","depth":2},{"value":"new Connect(appName, opts)","depth":3},{"value":"connect.getProvider(provider) ⇒ <code>UportSubprovider</code>","depth":3},{"value":"connect.onResponse(id, cb) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"connect.pubResponse(response)","depth":3},{"value":"connect.send(request, id, opts)","depth":3},{"value":"connect.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"connect.sendTransaction(txObj, id, sendOpts)","depth":3},{"value":"connect.requestVerificationSignature(unsignedClaim, sub, id, sendOpts)","depth":3},{"value":"connect.requestDisclosure(reqObj, id, sendOpts)","depth":3},{"value":"connect.sendVerification(verification, id, sendOpts)","depth":3},{"value":"connect.setState(Update)","depth":3},{"value":"connect.loadState()","depth":3},{"value":"connect.logout()","depth":3},{"value":"connect.reset()","depth":3},{"value":"UportSubprovider","depth":2},{"value":"new UportSubprovider(args)","depth":3}],"frontmatter":{"category":"uport-connect","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-transports/reference/index"},"headings":[{"value":"Modules","depth":2},{"value":"Classes","depth":2},{"value":"Constants","depth":2},{"value":"Functions","depth":2},{"value":"uport-transports/transport/ui","depth":3},{"value":"uport-transports/transport/ui.getImageDataURI ⇒ <code>String</code>","depth":3},{"value":"uport-transports/transport/ui.close","depth":3},{"value":"uport-transports/transport/ui.open","depth":3},{"value":"uport-transports/transport/ui.notifyPushSent","depth":3},{"value":"uport-transports/transport/ui.success","depth":3},{"value":"uport-transports/transport/ui.spinner","depth":3},{"value":"uport-transports/transport/ui.askProvider","depth":3},{"value":"uport-transports/transport/ui.failure","depth":3},{"value":"uport-transports/transport/ui~makeModal(content, close)","depth":3},{"value":"BrowserTransport","depth":3},{"value":"new BrowserTransport()","depth":3},{"value":"browserTransport.getIsMobile() ⇒ <code>Boolean</code>","depth":3},{"value":"browserTransport.getCallbackUrl(id) ⇒ <code>String</code>","depth":3},{"value":"browserTransport.getPushInfo() ⇒ <code>Object</code>","depth":3},{"value":"browserTransport.setPushInfo(pushToken, publicEncKey)","depth":3},{"value":"browserTransport.onResponse(id) ⇒ <code>Promise</code>","depth":3},{"value":"browserTransport.send(request, id, opts, cancel)","depth":3},{"value":"browserTransport.mobileSend(request, id, opts)","depth":3},{"value":"browserTransport.pushSend(request, id)","depth":3},{"value":"browserTransport.qrSend(request, id, opts, cancel)","depth":3},{"value":"uportModal ⇒ <code>String</code>","depth":3},{"value":"qrModal ⇒ <code>Object</code>","depth":3},{"value":"pushModal","depth":3},{"value":"successModal","depth":3},{"value":"failureModal","depth":3},{"value":"spinnerModal","depth":3},{"value":"providerModal","depth":3},{"value":"randomString(length) ⇒ <code>String</code>","depth":3},{"value":"decryptResponse(encrypted, secretKey) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"URIHandlerSend(uriHandler, config, message) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"poll(url, pollingInterval, cancelled) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"poll(url, messageParse, errorParse, pollingInterval, cancelled) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"send(token, pubEncKey, pushServiceUrl, message, opts) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"sendAndNotify()","depth":3},{"value":"send(displayText, message, opts) ⇒ <code>function</code> | <code>function</code>","depth":3},{"value":"chasquiCompress(message, threshold) ⇒ <code>String</code>","depth":3},{"value":"chasquiSend(config, message) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"send(config, message, opts) ⇒ <code>function</code>","depth":3},{"value":"getResponse() ⇒ <code>Object</code>","depth":3},{"value":"listenResponse(cb)","depth":3},{"value":"onResponse() ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"parseResponse() ⇒ <code>Object</code>","depth":3},{"value":"paramsToUrlFragment(url, params) ⇒ <code>String</code>","depth":3},{"value":"paramsToQueryString(url, params) ⇒ <code>String</code>","depth":3},{"value":"getUrlQueryParams(url) ⇒ <code>Object</code>","depth":3},{"value":"getURLJWT(url) ⇒ <code>String</code>","depth":3},{"value":"isJWT(jwt) ⇒ <code>Boolean</code>","depth":3},{"value":"trimURI(message)","depth":3},{"value":"messageToUniversalURI(message) ⇒ <code>String</code>","depth":3},{"value":"messageToDeeplinkURI(message, uri)","depth":3},{"value":"messageToURI(message, type)","depth":3}],"frontmatter":{"category":"uport-transports","type":"reference","index":10}}}]},"announcement":{"totalCount":1,"edges":[{"node":{"frontmatter":{"announcement":"Announcing support to migrate old uport identities to new ethereum mainnet identities, see our Release Notes https://developer.uport.me/releases for more details!","announcementType":"positive"}}}]}},"pageContext":{"category":"uport-credentials","slug":"/uport-credentials/guides/index"}}}