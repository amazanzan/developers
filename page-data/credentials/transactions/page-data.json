{"componentChunkName":"component---src-templates-content-jsx","path":"/credentials/transactions","result":{"data":{"allMarkdownRemark":{"totalCount":8,"edges":[{"node":{"fields":{"slug":"/uport-credentials/index"},"headings":[{"value":"uPort Credentials","depth":1},{"value":"Create & Request Attested Data","depth":2}],"excerpt":"uPort Credentials Create & Request Attested Data uPort is a self-sovereign digital identity platform—anchored on the Ethereum blockchain…","timeToRead":1,"frontmatter":{"title":"uPort Credentials","category":"uport-credentials","type":"landing","index":0,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/index.md"}}},{"node":{"fields":{"slug":"/uport-credentials/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Configure Your Application","depth":2},{"value":"Generate an Ethereum Keypair","depth":2},{"value":"Requesting Information From Your Users","depth":2},{"value":"Stateless Challenge/ Response","depth":3},{"value":"Requesting Push Notification Tokens From Your Users","depth":3},{"value":"Attesting Information About Your Users","depth":2},{"value":"Creating an Attestation","depth":3},{"value":"Asking Users to Sign Ethereum Transactions","depth":2}],"excerpt":"Getting Started Configure Your Application In your application, you must first configure your uPort object with an identifier and a private…","timeToRead":5,"frontmatter":{"title":"Getting Started with uPort Credentials","category":"uport-credentials","type":"content","index":null,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/guides/index.md"}}},{"node":{"fields":{"slug":"/credentials/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Disclosure Request Login Service","depth":2},{"value":"Selective Disclosure Request","depth":4},{"value":"Disclosure Response Authentication Service","depth":2},{"value":"Selective Disclosure Response","depth":4},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Creating a simple login solution with uport-credentials can be accomplished with a small Node.js application to request…","timeToRead":5,"frontmatter":{"title":"Server Side Login Example","category":"uport-credentials","type":"guide","index":2,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/login.md"}}},{"node":{"fields":{"slug":"/uport-credentials/guides/tutorial"},"headings":[{"value":"Create an Identity","depth":2},{"value":"Create Verification Service","depth":2},{"value":"Request Verification Service","depth":2}],"excerpt":"In this toutorial, we will demonstrate how to create and sign a custom credential on a server (called the Creator) and present it to a uPort…","timeToRead":7,"frontmatter":{"title":"Server-side examples","category":"uport-credentials","type":"content","index":null,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/guides/tutorial.md"}}},{"node":{"fields":{"slug":"/credentials/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Requesting verifications with your server application is the same process as creating a disclosure request as seen in the login…","timeToRead":5,"frontmatter":{"title":"Request Verification Example","category":"uport-credentials","type":"tutorial","index":4,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/verification.md"}}},{"node":{"fields":{"slug":"/credentials/transactions"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create Transaction Request","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction It is possible with uport-credentials to create an ethereum transaction request and have a mobile client approve and sign that…","timeToRead":6,"frontmatter":{"title":"Transaction Signing Example","category":"uport-credentials","type":"tutorial","index":5,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/transactions.md"}}},{"node":{"fields":{"slug":"/credentials/createverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create and Issue Verifications","depth":2},{"value":"Running the Service","depth":2}],"excerpt":"Introduction Creating and issuing verifications from your server application is a simple matter of utilizing uport-credentials to create…","timeToRead":9,"frontmatter":{"title":"Create Verification Example","category":"uport-credentials","type":"tutorial","index":3,"source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/verification.md"}}},{"node":{"fields":{"slug":"/uport-credentials/reference/index"},"headings":[{"value":"Credentials","depth":2},{"value":"new Credentials(settings)","depth":3},{"value":"credentials.createDisclosureRequest(params, expiresIn) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"credentials.createVerification(credential) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createVerificationSignatureRequest(unsignedClaim, opts) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createTxRequest(txObj, opts) ⇒ <code>String</code>","depth":3},{"value":"credentials.createDisclosureResponse(payload) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.processDisclosurePayload(response)","depth":3},{"value":"credentials.authenticateDisclosureResponse(token, callbackUrl) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.verifyDisclosure(token) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"Credentials.createIdentity() ⇒ <code>Object</code>","depth":3}],"excerpt":"Credentials The Credentials class allows you to easily create the signed payloads used in uPort, including\ncredentials and signed mobile app…","timeToRead":14,"frontmatter":{"title":"Library Reference","category":"uport-credentials","type":"reference","index":10,"source":"https://github.com/uport-project/uport-credentials/blob/develop/docs/reference/index.md"}}}]},"postBySlug":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"introduction","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#introduction","ariaLabel":"introduction permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Introduction"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is possible with uport-credentials to create an ethereum transaction request and have a mobile client approve and sign that transaction."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In order to facilitate this flow we will build upon our basic "},{"type":"element","tagName":"a","properties":{"href":"/credentials/login"},"children":[{"type":"text","value":"server login example"}]},{"type":"text","value":".  It is necessary to perform this step to request information that will be used to create a transaction."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://plantuml-server.kkeisuke.app/svg/UDg5LKrlqq0GlVChHkcbFLIaYBP93gZvi2dGKjC4WKGvREnnkkfwn-ok-m7YlpDsucPjSB0iozvv--RDcx5zPfqmhiZK2m1HED95jaJ33_PEwbmOaO6XGYSn6Oq6ZlgDq8GU8v4aKg_QaLiK2PgGj9kI8WDx9yFZuMpIWPdBdmX7WqPqokk6r8GCWpOahwV3O7pIW7qaX__3MFnHe8uHVl4omDWOUcYZ0TvoeVb4n7UhgkAsxXhWvmfcmJGCjy7pTjLfTLG0zkhVEjUXTjxP8E1u7VPShfOYRfgCPIwqwoBr8MroJvO7QoSPnuvC5_qwk8Cuq4wwfwxjc-YE_JFXn59Ox69uZk_Wk90fNaZToV6RhqjwXDvKITIkLxu4PLrmIKkfa1_ZzHH2xtonYE2TTcWO8KdtG5XumAMN3tLIijMSSpJtQ4hEVEjnlGpZFAyeOeC9fvP2MTWx3K-3yBX1vSSFl-sT3ey7iy7tDrNg4KHeKZ8P29vnXIpi7k569zB6YcnX44mv-jOnaUON1QXCNQaE9y4ix3F5-oyBJXTJWacfHy2dQqQl3O33mpgJZON-AxIv7O78SyFSNZeFvPSmWbWejUIUmNv3fir9MpoeXIfCdISokfelmD5sy-Vh2ovqnVLga1hSRMVT7GPIIvQY5VFiCBm9dneKB7FnjSu4gQ4CDWhOIW--W_JPmAYmjsNbCfMnAEUB6yhJmYKN4Ha7sHh8FkzevLZnU6fHJe5wWiBYZIxR2GyleHfVkHrVTajgw_Xx1PHoqwlyDzfNq6WYRUv7C9Sh3VkRXXzKpWTyCLXaR4TZqsFBj5VzFbnzWFs8hP8MuHfTONJPSpxFUERvF_G7wGeXbm00.svg","alt":"transaction"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Different types of transactions can be requested and signed.  For this example we will focus on a value transfer transaction, but you can also create and call smart contract functions."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because transactions do cost a fee, specifically a gas fee paid in WEI, an Ethereum account with enough ether is needed to exercise the code in this guide.  The code examples will utilize the Rinkeby network so this will not require real mainnet ether.  From inside the uPort mobile app, you can find the wallet address for an account by clicking on: "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Accounts"}]},{"type":"text","value":" > "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"then the account you wish to fund"}]},{"type":"text","value":" > "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Add funds"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":" - *do not use real ether for this tutorial!  Only use "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Rinkeby"}]},{"type":"text","value":" ether from a rinkeby wallet.**"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This guide utilizes the Ethereum Transaction Request flow and Selective Disclosure request/response patterns to provide an example of how to use these concepts to create a transaction request"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/messages/tx.md"},"children":[{"type":"text","value":"Ethereum Transaction Request"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/flows/tx.md"},"children":[{"type":"text","value":"Ethereum Transaction Request flow"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/messages/tx.md#signed-transaction-request"},"children":[{"type":"text","value":"Signed Transaction Request JWT"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/messages/tx.md#transaction-request-validity"},"children":[{"type":"text","value":"Transaction types"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/flows/selectivedisclosure"},"children":[{"type":"text","value":"Selective Disclosure flow"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/messages/sharereq"},"children":[{"type":"text","value":"Selective Disclosure Request"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/messages/shareresp"},"children":[{"type":"text","value":"Selective Disclosure Response"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the above concepts and uport-credentials, also note the following requirements before starting this example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"NodeJS"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Create a folder for the example and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cd ./example && npm init"}]},{"type":"text","value":" "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Install dependencies "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"npm install --save ngrok express did-jwt uport-transports uport-credentials"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This content is best if followed by interacting with a node console."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"setup","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#setup","ariaLabel":"setup permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Setup"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first order of business to creating any server side solution with uport-credentials is to obtain an application identity.  These identities are used to configure a uport-credentials object and can also be thought of as an ethereum key pair with a few extra capabilities made possible by adhering to "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/ethereum/EIPs/issues/1056"},"children":[{"type":"text","value":"ERC-1056"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After installing "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uport-credentials"}]},{"type":"text","value":" as a dependency, create the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"application identity"}]},{"type":"text","value":" that will be used to sign requests:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Credentials "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'uport-credentials'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\nCredentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createIdentity"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{"id":"output","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#output","ariaLabel":"output permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Output:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"json"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-json"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" \n  did"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" 'did"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"ethr"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"x"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"31486054"}]},{"type":"text","value":"a"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"ad"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"c"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"b"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"685"}]},{"type":"text","value":"cd"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"89"}]},{"type":"text","value":"ce"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"ba"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"018e210"}]},{"type":"text","value":"d"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"504"}]},{"type":"text","value":"e'"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  privateKey"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" 'ef"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"a"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"01"}]},{"type":"text","value":"d"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"d"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"98"}]},{"type":"text","value":"ba"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"08"}]},{"type":"text","value":"bd"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"23"}]},{"type":"text","value":"ee"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"8"}]},{"type":"text","value":"b"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"c"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"650076"}]},{"type":"text","value":"c"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"65"}]},{"type":"text","value":"d"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"629560940"}]},{"type":"text","value":"de"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"9935"}]},{"type":"text","value":"d"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"f"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"46"}]},{"type":"text","value":"f"},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"00679e01"}]},{"type":"text","value":"' \n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Save the output from the identity creation for later.  Please note that the private key "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"should"}]},{"type":"text","value":" be kept secure!  The private key shown in this guide is for "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"information purposes"}]},{"type":"text","value":" only."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"boilerplate","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#boilerplate","ariaLabel":"boilerplate permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Boilerplate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, require and configure dependencies.  Their usage will be explained later, however you should change this boilerplate code swapping the proper "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"appName"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"did"}]},{"type":"text","value":", and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"privateKey"}]},{"type":"text","value":" that was obtained during "},{"type":"element","tagName":"a","properties":{"href":"#setup"},"children":[{"type":"text","value":"setup"}]},{"type":"text","value":" to instantiate a new Credentials() object. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" express "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'express'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" bodyParser "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'body-parser'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" ngrok "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'ngrok'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" decodeJWT "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'did-jwt'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"decodeJWT\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Credentials "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'uport-credentials'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" transports "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'uport-transports'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"transport\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" message "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"require"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'uport-transports'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"message"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"util\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"let"}]},{"type":"text","value":" endpoint "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"''"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" app "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"express"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\napp"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"use"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"bodyParser"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"json"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" type"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'*/*'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"//setup Credentials object with newly created application identity."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" credentials "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Credentials"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  appName"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Create Verification Example'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  did"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'did:ethr:0x31486054a6ad2c0b685cd89ce0ba018e210d504e'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  privateKey"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'ef6a01d0d98ba08bd23ee8b0c650076c65d629560940de9935d0f46f00679e01'"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"create-transaction-request","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#create-transaction-request","ariaLabel":"create transaction request permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Create Transaction Request"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we need to provide an endpoint to ask for credentials from the user.  This will be done by creating a simple \"login\" endpoint that will request permissions for push notifications.  This is similar to our login example, only in this situation we specifically ask for a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"keypair"}]},{"type":"text","value":" account, and we are making sure to specify the Rinkeby network id "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0x4"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"app"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'/'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"req"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" res"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  credentials"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"createDisclosureRequest"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    notifications"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    accountType"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'keypair'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    network_id"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'0x4'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    callbackUrl"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" endpoint "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'/callback'"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"then"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"requestToken"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    console"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"requestToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    console"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"log"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"decodeJWT"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"requestToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"//log request token to console"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" uri "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" message"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"paramsToQueryString"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"message"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"messageToURI"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"requestToken"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"callback_type"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'post'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" qr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"  transports"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"ui"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getImageDataURI"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"uri"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    res"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"send"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"<div><img src=\""}]},{"type":"element","tagName":"span","properties":{"className":["token","interpolation"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"${"}]},{"type":"text","value":"qr"},{"type":"element","tagName":"span","properties":{"className":["token","interpolation-punctuation","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"/></div>"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For the purposes of this exercise we need the user's address information contained in their DID in order to send a transaction request, which will be done while handling the response from the following "},{"type":"element","tagName":"a","properties":{"href":"/messages/sharereq"},"children":[{"type":"text","value":"selective disclosure request"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the response is received at the following callback, the access token can be passed to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"authenticateDisclosureResponse()"}]},{"type":"text","value":" where the response signature is validated.  With a validated response a transaction request can be created."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"app.post('/callback', (req, res) => {\n  console.log(\"Callback hit\")\n  const jwt = req.body.access_token\n  credentials.authenticateDisclosureResponse(jwt).then(creds => {\n    // take this time to perform custom authorization steps... then,\n    // set up a push transport with the provided \n    // push token and public encryption key (boxPub)\n    const push = transports.push.send(creds.pushToken, creds.boxPub)\n\n    const txObject = {\n      to: creds.mnid,\n      value: '10000000000000000',\n    }\n\n    credentials.createTxRequest(txObject, {callbackUrl: `${endpoint}/txcallback`, callback_type: 'post'}).then(attestation => {\n      console.log(`Encoded JWT sent to user: ${attestation}`)\n      return push(attestation)  // *push* the notification to the user's uPort mobile app.\n    }).then(res => {\n      console.log(res)\n      console.log('Push notification sent and should be recieved any moment...')\n      console.log('Accept the push notification in the uPort mobile application')\n    })\n  })\n})"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compared to our other solution guides, there is a lot going on in our authentication callback.  After authenticating the disclosure request a transaction object is created from data contain in the disclosure response JWT.  For the use case of a value transfer, we can assign the mobile client's MNID at the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"to"}]},{"type":"text","value":" address of the transaction object.  A "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"value"}]},{"type":"text","value":" field with a string representing WEI is also required.  To see what else may be required for other transaction flows please reference the transaction request "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/messages/tx.md#transaction-request-validity"},"children":[{"type":"text","value":"specifications"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are several attributes that can be added to the transaction request.  To see what else can be configured, check out our transaction "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/uport-project/specs/blob/develop/messages/tx.md#signed-transaction-request"},"children":[{"type":"text","value":"JWT specification"}]},{"type":"text","value":".  In this example we have included a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"callbackURL"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"callback_type"}]},{"type":"text","value":" attribute.  This has been added to post the successful transaction hash to.  Below, the final callback in this flow does very little other than log the transaction hash."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"app.post('/txcallback', (req, res) => {\n  console.log(\"txCallback hit\")\n  console.log(req.body)\n  ngrok.disconnect()\n})"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"running-the-service","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#running-the-service","ariaLabel":"running the service permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Running the Service"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"// run the app server and tunneling service\nconst server = app.listen(8088, () => {\n  ngrok.connect(8088).then(ngrokUrl => {\n    endpoint = ngrokUrl\n    console.log(`Tx-Signing Service running, open at ${endpoint}`)\n  })\n})"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Combining everything and running it will display a message in the terminal like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Tx-Signing Service running, open at https://f70c25bd.ngrok.io"}]},{"type":"text","value":". "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All that is left to do is to try it out!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Open a browser and navigate to this URL to generate a QR code."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Scan the QR with the uPort mobile client"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Approve (or deny) the disclosure request"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Wait for the eventual push notification, and approve (sign) the transaction"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Inspect the output in the console"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"timeToRead":6,"excerpt":"Introduction It is possible with uport-credentials to create an ethereum transaction request and have a mobile client approve and sign that…","headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create Transaction Request","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"title":"Transaction Signing Example","category":"uport-credentials","type":"tutorial","source":"https://github.com/uport-project/uport-project.github.io/blob/develop/markdown/docs/credentials/transactions.md"},"fields":{"slug":"/credentials/transactions"}},"navTypes":{"edges":[{"node":{"fields":{"slug":"/readme"},"headings":[{"value":"uPort Specs","depth":1},{"value":"Identities","depth":2},{"value":"Identities created using the uPort Mobile App","depth":3},{"value":"Request Flows","depth":2},{"value":"More about request flows","depth":3},{"value":"Request and Response Transports","depth":2},{"value":"Request/Response Transports","depth":3},{"value":"Off-chain Messages","depth":2},{"value":"More about Off-chain Messages","depth":3},{"value":"On-chain Transactions","depth":2},{"value":"More about Signing Ethereum transactions","depth":3},{"value":"uPort PKI","depth":2},{"value":"More about the uPort PKI","depth":3}],"frontmatter":{"category":"specs","type":"reference","index":3}}},{"node":{"fields":{"slug":"/uport-transports/index"},"headings":[{"value":"uPort Transports","depth":1},{"value":"Connect Users to a uPort Client","depth":3}],"frontmatter":{"category":"uport-transports","type":"landing","index":0}}},{"node":{"fields":{"slug":"/uport-credentials/index"},"headings":[{"value":"uPort Credentials","depth":1},{"value":"Create & Request Attested Data","depth":2}],"frontmatter":{"category":"uport-credentials","type":"landing","index":0}}},{"node":{"fields":{"slug":"/uport-transports/guides/modules"},"headings":[{"value":"<a name=\"transport-guide\"></a> uPort Transports Guide","depth":1},{"value":"Request Transports","depth":2},{"value":"Response Transports","depth":2},{"value":"<a name=\"quick-start\"></a> Quick Start","depth":2}],"frontmatter":{"category":"uport-transports","type":"guide","index":1}}},{"node":{"fields":{"slug":"/uport-credentials/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Configure Your Application","depth":2},{"value":"Generate an Ethereum Keypair","depth":2},{"value":"Requesting Information From Your Users","depth":2},{"value":"Stateless Challenge/ Response","depth":3},{"value":"Requesting Push Notification Tokens From Your Users","depth":3},{"value":"Attesting Information About Your Users","depth":2},{"value":"Creating an Attestation","depth":3},{"value":"Asking Users to Sign Ethereum Transactions","depth":2}],"frontmatter":{"category":"uport-credentials","type":"content","index":null}}},{"node":{"fields":{"slug":"/uport-connect/index"},"headings":[{"value":"uPort Connect","depth":1},{"value":"Instantly Connect Users to Your dApp","depth":3}],"frontmatter":{"category":"uport-connect","type":"landing","index":0}}},{"node":{"fields":{"slug":"/transports/index"},"headings":[{"value":"Request/Response Transports","depth":1},{"value":"Requests","depth":2},{"value":"Open URL","depth":3},{"value":"QR Code","depth":3},{"value":"Push Notifications","depth":3},{"value":"Responses","depth":2},{"value":"Redirect callback type","depth":3},{"value":"HTTP post callback type","depth":3},{"value":"Examples","depth":2},{"value":"Mobile Browser Transport","depth":3},{"value":"Desktop Browser Serverless Transport","depth":3},{"value":"Desktop Browser Server Backed Transport","depth":3},{"value":"Push Notification Transport","depth":3}],"frontmatter":{"category":"transports","type":"reference","index":null}}},{"node":{"fields":{"slug":"/rest-apis/fuel-server"},"headings":[{"value":"Transaction Fueling Server","depth":1},{"value":"API Description","depth":2},{"value":"Fuel Token","depth":3},{"value":"Fund address","depth":3},{"value":"Endpoint","depth":4},{"value":"Header","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"apis","type":"reference","index":null}}},{"node":{"fields":{"slug":"/transports/push"},"headings":[{"value":"Push Notification Transport","depth":1},{"value":"Proper encoding of the request","depth":3},{"value":"Sending the request","depth":2},{"value":"Push notification server","depth":3},{"value":"Endpoint","depth":4},{"value":"Headers","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"transports","type":"reference","index":null}}},{"node":{"fields":{"slug":"/rest-apis/relay-server"},"headings":[{"value":"Meta Transaction Relaying Server","depth":1},{"value":"API Description","depth":2},{"value":"Fuel Token","depth":3},{"value":"MetaSignedTx","depth":3},{"value":"Endpoint","depth":4},{"value":"Header","depth":4},{"value":"Body","depth":4},{"value":"Response","depth":4},{"value":"Response data","depth":4}],"frontmatter":{"category":"apis","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/diddocument"},"headings":[{"value":"Decentralized Identity Document (DID Document)","depth":1},{"value":"Contents","depth":2},{"value":"Parameters","depth":3}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/index"},"headings":[{"value":"uPort Public Key Infrastructure (PKI)","depth":1},{"value":"Purpose","depth":2},{"value":"Creating and Verifying a JWT","depth":2},{"value":"Identity Document","depth":2},{"value":"Verifying a signature","depth":2}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/pki/identitydocument"},"headings":[{"value":"Identity Document (DEPRECATED)","depth":1},{"value":"Contents","depth":2},{"value":"Parameters","depth":3},{"value":"Resolving the Public Key for <code class=\"language-text\">iss</code>","depth":3},{"value":"Resolving the Public Encryption Key for <code class=\"language-text\">iss</code>","depth":3},{"value":"Registering an Identity Document","depth":2},{"value":"External Accounts (Key Pairs)","depth":3},{"value":"Smart Contract Accounts","depth":3},{"value":"uPort Mobile App Created Identities","depth":3}],"frontmatter":{"category":"pki","type":"reference","index":null}}},{"node":{"fields":{"slug":"/overview/attestation"},"headings":[{"value":"Issue Verifications","depth":1},{"value":"Contribute to the Decentralized World","depth":2}],"frontmatter":{"category":"attestation","type":"orientation","index":4}}},{"node":{"fields":{"slug":"/overview/login"},"headings":[{"value":"Login Solutions","depth":1},{"value":"Frictionless Login Across the Web","depth":2}],"frontmatter":{"category":"login","type":"orientation","index":3}}},{"node":{"fields":{"slug":"/overview/transactions"},"headings":[{"value":"Requesting Transactions","depth":1},{"value":"Send Users An Ethereum Transaction Request","depth":2}],"frontmatter":{"category":"Requesting Transactions","type":"orientation","index":5}}},{"node":{"fields":{"slug":"/messages/claims"},"headings":[{"value":"Issuer Claims","depth":1},{"value":"Verified Claims about Issuer","depth":2},{"value":"IPLD Format","depth":3},{"value":"Parameters","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/index"},"headings":[{"value":"Off-chain Messages","depth":1},{"value":"JSON Web Token","depth":2},{"value":"Requirements","depth":3},{"value":"JOSE Header","depth":4},{"value":"Attributes","depth":4},{"value":"Signature Verification","depth":3},{"value":"Message Encryption","depth":3},{"value":"Unsigned Requests (Deprecated)","depth":2},{"value":"Standard Unsigned Parameters","depth":3},{"value":"Message types","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/personalsignreq"},"headings":[{"value":"Personal Sign Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/personalsignresp"},"headings":[{"value":"Personal Sign Response","depth":1},{"value":"Attributes","depth":1}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/encryption"},"headings":[{"value":"Message Encryption","depth":1},{"value":"Encryption Public Key resolution","depth":2},{"value":"Request/Response resolution","depth":2},{"value":"JOSE JWK Standards","depth":3},{"value":"Encrypting the request","depth":2},{"value":"Decrypting the request","depth":2},{"value":"Padding","depth":2},{"value":"Legacy Encryption of the request","depth":2},{"value":"Encoding the encrypted data","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/sharereq"},"headings":[{"value":"Selective Disclosure Request","depth":1},{"value":"Attributes","depth":4},{"value":"Claims Spec","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"Unsigned Requests (Deprecated)","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/shareresp"},"headings":[{"value":"Selective Disclosure Response","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/signtypeddatareq"},"headings":[{"value":"Sign Typed Data Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/tx"},"headings":[{"value":"Ethereum Transaction Request","depth":1},{"value":"Signed Transaction Request","depth":2},{"value":"Attributes","depth":3},{"value":"ERC 67 Unsigned Transaction Request","depth":2},{"value":"Attributes","depth":3},{"value":"Addresses and Network selection","depth":2},{"value":"Transaction Request Validity","depth":2},{"value":"ETH Value Transfer","depth":3},{"value":"ETH Value Transfer","depth":3},{"value":"Ethereum Smart Contract creation","depth":3},{"value":"Client Callback","depth":2}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/verificationreq"},"headings":[{"value":"Verified Claim Request","depth":1},{"value":"Attributes","depth":4}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/verification"},"headings":[{"value":"Verified Claims","depth":1},{"value":"Attributes","depth":2},{"value":"Claims Best Practices","depth":2},{"value":"Use atomic claims","depth":3},{"value":"Bundling multiple claims as one","depth":3},{"value":"Claim Taxonomy","depth":3}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/messages/signtypeddataresp"},"headings":[{"value":"Signed Typed Data Response","depth":1},{"value":"Attributes","depth":1}],"frontmatter":{"category":"messages","type":"reference","index":null}}},{"node":{"fields":{"slug":"/guides/attestcredentials"},"headings":[{"value":"Attesting Credentials","depth":1},{"value":"Requesting the user to sign a credential","depth":2},{"value":"Relaying an existing credential","depth":2},{"value":"Signing a credential about the user in app","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/gettingstarted"},"headings":[{"value":"Get Started","depth":1},{"value":"Get the uPort App","depth":2},{"value":"Get an Application ID","depth":2},{"value":"Buidl","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/reactuporttruffle"},"headings":[{"value":"React-uport Truffle box","depth":1},{"value":"Setup React Truffle Box","depth":2},{"value":"Create the necessary uport-connect objects","depth":2},{"value":"Request a user's information","depth":2},{"value":"Create an Attestation","depth":2},{"value":"Wrapping it up","depth":2}],"frontmatter":{"category":"truffle","type":"tutorial","index":0}}},{"node":{"fields":{"slug":"/guides/requestcredentials"},"headings":[{"value":"Requesting Credentials","depth":1},{"value":"Authenticating a user","depth":2},{"value":"Requesting specific credentials","depth":2},{"value":"Enabling push notifications","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/guides/signtransactions"},"headings":[{"value":"Ethereum Transactions and Contract Calls","depth":1},{"value":"uPort Requests","depth":2},{"value":"Using with a Provider (Web3)","depth":2}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/flows/index"},"headings":[{"value":"Uport Request Flows","depth":1},{"value":"Unified Message Request Flow","depth":2},{"value":"Specific Application flows","depth":2},{"value":"Errors","depth":2}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/personalsign"},"headings":[{"value":"Personal Signature Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/privatechain"},"headings":[{"value":"Private Chain Provisioning Flow","depth":1},{"value":"Requirements","depth":2},{"value":"Provisioning Methodology","depth":2}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/selectivedisclosure"},"headings":[{"value":"Selective Disclosure Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Deprecated Flows","depth":3},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/tx"},"headings":[{"value":"Ethereum Transaction Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/typeddatasig"},"headings":[{"value":"Typed Data Signature Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/verification"},"headings":[{"value":"Send Verification Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Verifications","depth":2},{"value":"Deprecated Flows","depth":3},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/flows/verificationreq"},"headings":[{"value":"Verified Claim Request Flow","depth":1},{"value":"Endpoint","depth":2},{"value":"Send Request","depth":2},{"value":"Client Callback","depth":2},{"value":"Successful Response","depth":3},{"value":"Errors","depth":3}],"frontmatter":{"category":"flows","type":"reference","index":null}}},{"node":{"fields":{"slug":"/credentials/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Disclosure Request Login Service","depth":2},{"value":"Selective Disclosure Request","depth":4},{"value":"Disclosure Response Authentication Service","depth":2},{"value":"Selective Disclosure Response","depth":4},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"guide","index":2}}},{"node":{"fields":{"slug":"/credentials/index"},"headings":[{"value":"Server-side Login Solution","depth":1},{"value":"The Login Solution for Your Server-side dApp","depth":2}],"frontmatter":{"category":"login","type":"orientation","index":0}}},{"node":{"fields":{"slug":"/connect/login"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Create Authentication Functionality","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":2}}},{"node":{"fields":{"slug":"/connect/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":4}}},{"node":{"fields":{"slug":"/connect/sendverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Boilerplate","depth":3},{"value":"Create and Send a Verification","depth":2},{"value":"Run the example","depth":2}],"frontmatter":{"category":"uport-connect","type":"tutorial","index":3}}},{"node":{"fields":{"slug":"/muport-core-js/guides/simple-id"},"headings":[{"value":"Simple ID (muPort)","depth":1},{"value":"Onboarding/Signup","depth":2},{"value":"Interacting with a service","depth":2},{"value":"Setting up recovery network","depth":2},{"value":"Using the recovery network","depth":2},{"value":"Updating the encrypted recovery shards","depth":2}],"frontmatter":{"category":"muport","type":"guides","index":null}}},{"node":{"fields":{"slug":"/ethr-did/docs/index"},"headings":[{"value":"Ethr-DID","depth":1},{"value":"A Scalable Identity Method for Ethereum Addresses","depth":2}],"frontmatter":{"category":"ethr-did","type":"landing","index":0}}},{"node":{"fields":{"slug":"/did-jwt/guides/index"},"headings":[{"value":"Working with did-JWT's","depth":1},{"value":"Creating a JWT","depth":2},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4},{"value":"Verifying a JWT","depth":2},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4},{"value":"Signer Functions","depth":2},{"value":"SimpleSigner","depth":3},{"value":"Parameters","depth":4},{"value":"Creating Custom Signers for integrating with HSM","depth":3},{"value":"Parameters","depth":4},{"value":"Promise Return Value","depth":4}],"frontmatter":{"category":"did-jwt","type":"guide","index":4}}},{"node":{"fields":{"slug":"/ethr-did/docs/reference/index"},"headings":[{"value":"Introduction","depth":2},{"value":"DID Method","depth":2},{"value":"Configuration","depth":2}],"frontmatter":{"category":"ethr-did","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-credentials/guides/tutorial"},"headings":[{"value":"Create an Identity","depth":2},{"value":"Create Verification Service","depth":2},{"value":"Request Verification Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"content","index":null}}},{"node":{"fields":{"slug":"/overview/glossary"},"headings":[{"value":"Terms and Definitions","depth":3}],"frontmatter":{"category":"glossary","type":"overview","index":2}}},{"node":{"fields":{"slug":"/overview/index"},"headings":[{"value":"Helping You Build User Centric Apps on Blockchains","depth":2},{"value":"Onboarding a user to your dApp","depth":3},{"value":"As a Developer You Want Users Who Are Active and Come Back to Your dApp.","depth":5},{"value":"What is an Identity?","depth":2},{"value":"Help Your User Build Their Identity","depth":3},{"value":"But All I Really Need is an Ethereum Address!","depth":3},{"value":"Asking The User to do Something","depth":3},{"value":"Reasons for Asking for Identity Data","depth":3},{"value":"The Problem With Centralized Identity Solutions","depth":3},{"value":"Signing Ethereum Transactions","depth":2},{"value":"Off-chain Data","depth":2},{"value":"uPort Protocols and Libraries","depth":2},{"value":"For Fully Decentralized Apps (dApps)","depth":3},{"value":"For Decentralized Mobile Applications","depth":3},{"value":"For Hybrid Applications","depth":3}],"frontmatter":{"category":"about","type":"overview","index":0}}},{"node":{"fields":{"slug":"/ethr-did-resolver/readme"},"headings":[{"value":"ethr DID Resolver","depth":1},{"value":"DID method","depth":2},{"value":"DID Document","depth":2},{"value":"Building a DID document","depth":2},{"value":"Owner Address","depth":3},{"value":"Enumerating contract events for an identity","depth":3},{"value":"Delegate Keys","depth":3},{"value":"Non Ethereum Attributes","depth":3},{"value":"Public Keys","depth":3},{"value":"Key purposes","depth":4},{"value":"Example hex encoded Secp256k1 Verification Key","depth":4},{"value":"Base64 encoded Ed25519 Verification Key","depth":4},{"value":"Base64 encoded X25519 Encryption Key","depth":4},{"value":"Service Endpoints","depth":3},{"value":"Hex encoded Secp256k1 Verification Key","depth":4},{"value":"Resolving a DID document","depth":2},{"value":"Multi-network configuration","depth":2}],"frontmatter":{"category":"ethr-did-resolver","type":"reference","index":7}}},{"node":{"fields":{"slug":"/ethr-did-registry/readme"},"headings":[{"value":"Ethereum DID Registry","depth":1},{"value":"Contract Deployments","depth":2},{"value":"Using the Registry","depth":2},{"value":"On-chain vs. Off-chain","depth":2},{"value":"Identity Identifier","depth":2},{"value":"Identity Ownership","depth":2},{"value":"Looking up Identity Ownership","depth":3},{"value":"Changing Identity Ownership","depth":3},{"value":"Delegates","depth":2},{"value":"Delegate Types","depth":3},{"value":"Validity","depth":3},{"value":"Looking up a Delegate","depth":3},{"value":"Adding a Delegate","depth":3},{"value":"Revoking a Delegate","depth":3},{"value":"Enumerating Delegates Off-chain","depth":3},{"value":"Adding Off-chain Attributes","depth":2},{"value":"Setting Attributes","depth":3},{"value":"Revoking Attributes","depth":3},{"value":"Reading attributes","depth":3},{"value":"Delegate types and attribute names encoding","depth":3},{"value":"Enumerating Linked Identity Events","depth":2},{"value":"Assemble a DID Document","depth":2},{"value":"Deploy contract","depth":2},{"value":"Testing the Contracts","depth":2}],"frontmatter":{"category":"ethr-did-registry","type":"reference","index":0}}},{"node":{"fields":{"slug":"/credentials/requestverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Request Verifications","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":4}}},{"node":{"fields":{"slug":"/credentials/transactions"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create Transaction Request","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":5}}},{"node":{"fields":{"slug":"/credentials/createverification"},"headings":[{"value":"Introduction","depth":1},{"value":"Setup","depth":2},{"value":"Output:","depth":5},{"value":"Boilerplate","depth":3},{"value":"Create and Issue Verifications","depth":2},{"value":"Running the Service","depth":2}],"frontmatter":{"category":"uport-credentials","type":"tutorial","index":3}}},{"node":{"fields":{"slug":"/ethr-did/docs/guides/index"},"headings":[{"value":"Getting Started","depth":1},{"value":"Construct a New Identity","depth":2},{"value":"Create Ethr-DID","depth":3},{"value":"Use Existing Web3 Provider","depth":4},{"value":"Ethereum Web3 Wallet Developers","depth":4},{"value":"Exchange Verifiable Data","depth":2},{"value":"Signing a JWT","depth":3},{"value":"Verifying a JWT","depth":3},{"value":"Manage Keys","depth":2},{"value":"The Concept of Identity Ownership","depth":3},{"value":"Changing an Owner","depth":3},{"value":"Adding a Delegate Signer","depth":3},{"value":"Set Public Attributes","depth":2}],"frontmatter":{"category":"ethr-did","type":"guide","index":1}}},{"node":{"fields":{"slug":"/uport-credentials/reference/index"},"headings":[{"value":"Credentials","depth":2},{"value":"new Credentials(settings)","depth":3},{"value":"credentials.createDisclosureRequest(params, expiresIn) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"Verifiable Claims Spec","depth":4},{"value":"User Info Spec","depth":4},{"value":"credentials.createVerification(credential) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createVerificationSignatureRequest(unsignedClaim, opts) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.createTxRequest(txObj, opts) ⇒ <code>String</code>","depth":3},{"value":"credentials.createDisclosureResponse(payload) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.processDisclosurePayload(response)","depth":3},{"value":"credentials.authenticateDisclosureResponse(token, callbackUrl) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.verifyDisclosure(token) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"credentials.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"Credentials.createIdentity() ⇒ <code>Object</code>","depth":3}],"frontmatter":{"category":"uport-credentials","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-connect/guides/usage"},"headings":[{"value":"<a name=\"usage-guide\"></a> Connect Library Guide","depth":1},{"value":"<a name=\"communication\"></a> Messages","depth":2},{"value":"<a name=\"communication\"></a> Communication and Transports","depth":2},{"value":"Default QR Flow","depth":3},{"value":"<a name=\"default-mobile\"></a> Default Mobile Requests","depth":3},{"value":"<a name=\"default-push\"></a> Push Notification Requests","depth":3},{"value":"Transports Configuration","depth":3},{"value":"<a name=\"both-default\"></a> Combining Both Flows","depth":2},{"value":"<a name=\"ethereum\"></a> Ethereum Interactions and Transactions","depth":2},{"value":"<a name=\"uPortEth\"></a> uPort Requests","depth":3},{"value":"<a name=\"web3\"></a> Using With a Provider (Web3)","depth":3},{"value":"<a name=\"private-chain\"></a> Private Chain support","depth":3}],"frontmatter":{"category":"uport-connect","type":"guide","index":null}}},{"node":{"fields":{"slug":"/uport-connect/reference/index"},"headings":[{"value":"Classes","depth":2},{"value":"Connect","depth":2},{"value":"new Connect(appName, opts)","depth":3},{"value":"connect.getProvider(provider) ⇒ <code>UportSubprovider</code>","depth":3},{"value":"connect.onResponse(id, cb) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"connect.pubResponse(response)","depth":3},{"value":"connect.send(request, id, opts)","depth":3},{"value":"connect.contract(abi) ⇒ <code>Object</code>","depth":3},{"value":"connect.sendTransaction(txObj, id, sendOpts)","depth":3},{"value":"connect.requestVerificationSignature(unsignedClaim, sub, id, sendOpts)","depth":3},{"value":"connect.requestDisclosure(reqObj, id, sendOpts)","depth":3},{"value":"connect.sendVerification(verification, id, sendOpts)","depth":3},{"value":"connect.setState(Update)","depth":3},{"value":"connect.loadState()","depth":3},{"value":"connect.logout()","depth":3},{"value":"connect.reset()","depth":3},{"value":"UportSubprovider","depth":2},{"value":"new UportSubprovider(args)","depth":3}],"frontmatter":{"category":"uport-connect","type":"reference","index":10}}},{"node":{"fields":{"slug":"/uport-transports/reference/index"},"headings":[{"value":"Modules","depth":2},{"value":"Classes","depth":2},{"value":"Constants","depth":2},{"value":"Functions","depth":2},{"value":"uport-transports/transport/ui","depth":3},{"value":"uport-transports/transport/ui.getImageDataURI ⇒ <code>String</code>","depth":3},{"value":"uport-transports/transport/ui.close","depth":3},{"value":"uport-transports/transport/ui.open","depth":3},{"value":"uport-transports/transport/ui.notifyPushSent","depth":3},{"value":"uport-transports/transport/ui.success","depth":3},{"value":"uport-transports/transport/ui.spinner","depth":3},{"value":"uport-transports/transport/ui.askProvider","depth":3},{"value":"uport-transports/transport/ui.failure","depth":3},{"value":"uport-transports/transport/ui~makeModal(content, close)","depth":3},{"value":"BrowserTransport","depth":3},{"value":"new BrowserTransport()","depth":3},{"value":"browserTransport.getIsMobile() ⇒ <code>Boolean</code>","depth":3},{"value":"browserTransport.getCallbackUrl(id) ⇒ <code>String</code>","depth":3},{"value":"browserTransport.getPushInfo() ⇒ <code>Object</code>","depth":3},{"value":"browserTransport.setPushInfo(pushToken, publicEncKey)","depth":3},{"value":"browserTransport.onResponse(id) ⇒ <code>Promise</code>","depth":3},{"value":"browserTransport.send(request, id, opts, cancel)","depth":3},{"value":"browserTransport.mobileSend(request, id, opts)","depth":3},{"value":"browserTransport.pushSend(request, id)","depth":3},{"value":"browserTransport.qrSend(request, id, opts, cancel)","depth":3},{"value":"uportModal ⇒ <code>String</code>","depth":3},{"value":"qrModal ⇒ <code>Object</code>","depth":3},{"value":"pushModal","depth":3},{"value":"successModal","depth":3},{"value":"failureModal","depth":3},{"value":"spinnerModal","depth":3},{"value":"providerModal","depth":3},{"value":"randomString(length) ⇒ <code>String</code>","depth":3},{"value":"decryptResponse(encrypted, secretKey) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"URIHandlerSend(uriHandler, config, message) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"poll(url, pollingInterval, cancelled) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"poll(url, messageParse, errorParse, pollingInterval, cancelled) ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"send(token, pubEncKey, pushServiceUrl, message, opts) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"sendAndNotify()","depth":3},{"value":"send(displayText, message, opts) ⇒ <code>function</code> | <code>function</code>","depth":3},{"value":"chasquiCompress(message, threshold) ⇒ <code>String</code>","depth":3},{"value":"chasquiSend(config, message) ⇒ <code>function</code> | <code>Promise.<Object, Error></code>","depth":3},{"value":"send(config, message, opts) ⇒ <code>function</code>","depth":3},{"value":"getResponse() ⇒ <code>Object</code>","depth":3},{"value":"listenResponse(cb)","depth":3},{"value":"onResponse() ⇒ <code>Promise.<Object, Error></code>","depth":3},{"value":"parseResponse() ⇒ <code>Object</code>","depth":3},{"value":"paramsToUrlFragment(url, params) ⇒ <code>String</code>","depth":3},{"value":"paramsToQueryString(url, params) ⇒ <code>String</code>","depth":3},{"value":"getUrlQueryParams(url) ⇒ <code>Object</code>","depth":3},{"value":"getURLJWT(url) ⇒ <code>String</code>","depth":3},{"value":"isJWT(jwt) ⇒ <code>Boolean</code>","depth":3},{"value":"trimURI(message)","depth":3},{"value":"messageToUniversalURI(message) ⇒ <code>String</code>","depth":3},{"value":"messageToDeeplinkURI(message, uri)","depth":3},{"value":"messageToURI(message, type)","depth":3}],"frontmatter":{"category":"uport-transports","type":"reference","index":10}}}]},"announcement":{"totalCount":1,"edges":[{"node":{"frontmatter":{"announcement":"Announcing support to migrate old uport identities to new ethereum mainnet identities, see our Release Notes https://developer.uport.me/releases for more details!","announcementType":"positive"}}}]}},"pageContext":{"category":"uport-credentials","slug":"/credentials/transactions"}}}